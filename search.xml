<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>AList挂载云盘</title>
    <url>/2023/05/04/AList%E6%8C%82%E8%BD%BD%E4%BA%91%E7%9B%98/</url>
    <content><![CDATA[<h2 id="挂载onderive"><a class="markdownIt-Anchor" href="#挂载onderive"></a> 挂载OnDerive</h2>
<h3 id="视频教程挂载onderive视频"><a class="markdownIt-Anchor" href="#视频教程挂载onderive视频"></a> 视频教程：<a href="https://www.bilibili.com/video/BV1Ro4y1s725/?spm_id_from=888.80997.embed_other.whitelist&amp;vd_source=dad82534b29c1223ba0cff51a716d889">挂载OnDerive视频</a></h3>
<div align=center class="aspect-ratio">
    <iframe src="https://player.bilibili.com/player.html?aid=396559519&&page=1&as_wide=1&high_quality=1&danmaku=0" 
    scrolling="no" 
    border="0" 
    frameborder="no" 
    framespacing="0" 
    high_quality=1
    danmaku=1 
    allowfullscreen="true"> 
    </iframe>
</div>
<h3 id="图文教程挂载onderive图文"><a class="markdownIt-Anchor" href="#图文教程挂载onderive图文"></a> 图文教程：<a href="https://alist.nn.ci/zh/guide/drivers/onedrive_app.html#%E5%A5%BD%E5%A4%84%E4%BB%A5%E5%8F%8A%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9">挂载OnDerive图文</a></h3>
<h2 id="挂载阿里云盘-open"><a class="markdownIt-Anchor" href="#挂载阿里云盘-open"></a> 挂载阿里云盘 Open</h2>
<h3 id="图文教程挂载阿里云盘-open"><a class="markdownIt-Anchor" href="#图文教程挂载阿里云盘-open"></a> 图文教程：<a href="https://alist.nn.ci/zh/guide/drivers/aliyundrive_open.html">挂载阿里云盘 Open</a></h3>
]]></content>
      <tags>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>Android应用推荐</title>
    <url>/2023/04/21/Android%E5%BA%94%E7%94%A8%E6%8E%A8%E8%8D%90/</url>
    <content><![CDATA[<h2 id="1-你跳跳"><a class="markdownIt-Anchor" href="#1-你跳跳"></a> 1、你跳跳</h2>
<p><strong>帮助我们自动跳过一些app开屏烦人的界面，如广告</strong><br />
<strong>该应用不会无度索取用户权限，是一款良心app</strong><br />
<img src="https://cdn.jsdelivr.net/gh/Captain997/Blogimage@main/blogimg/2023-4-21/turnonltt.gif" alt="" /></p>
<h3 id="官网地址李跳跳"><a class="markdownIt-Anchor" href="#官网地址李跳跳"></a> 官网地址：<a href="https://litiaotiao.cn/">李跳跳</a></h3>
<h3 id="高速下载蓝奏云-密码-cf24"><a class="markdownIt-Anchor" href="#高速下载蓝奏云-密码-cf24"></a> 高速下载：<a href="https://wwjw.lanzoum.com/iKBU80tn5pqj?pwd=cf24#cf24">蓝奏云</a>   密码: <code>cf24</code></h3>
]]></content>
      <categories>
        <category>应用推荐</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>app</tag>
      </tags>
  </entry>
  <entry>
    <title>E5开发者计划续订</title>
    <url>/2023/04/30/E5%E5%BC%80%E5%8F%91%E8%80%85%E8%AE%A1%E5%88%92%E7%BB%AD%E8%AE%A2/</url>
    <content><![CDATA[<p><strong>原教程已不适用，未来出现稳定方法再更新！</strong></p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>Microsoft 365</tag>
        <tag>E5开发</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo写作基础</title>
    <url>/2023/04/19/Hexo%E5%86%99%E4%BD%9C%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<h2 id="️基础写作"><a class="markdownIt-Anchor" href="#️基础写作"></a> ✏️基础写作</h2>
<p>1、创建新文章</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo n &quot;文章名&quot;</span><br></pre></td></tr></table></figure>
<p>2、生成静态文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure>
<p>3、启动本地服务器</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure>
<p>4、将代码推送到远端服务器、部署网站</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure>
<p>5、清理hexo数据并重新生成页面并部署</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br></pre></td></tr></table></figure>
<h2 id="front-matter参数"><a class="markdownIt-Anchor" href="#front-matter参数"></a> Front-matter参数</h2>
<table>
<thead>
<tr>
<th style="text-align:center">标签</th>
<th>注解</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">title</td>
<td>【必需】页面标题</td>
</tr>
<tr>
<td style="text-align:center">date</td>
<td>【必需】页面创建日期</td>
</tr>
<tr>
<td style="text-align:center">type</td>
<td>【必需】标签、分类和友情链接三个页面需要配置</td>
</tr>
<tr>
<td style="text-align:center">updated</td>
<td>【可选】页面更新日期</td>
</tr>
<tr>
<td style="text-align:center">description</td>
<td>【可选】页面描述</td>
</tr>
<tr>
<td style="text-align:center">keywords</td>
<td>【可选】页面关键字</td>
</tr>
<tr>
<td style="text-align:center">comments</td>
<td>【可选】显示页面评论模块(默认true)</td>
</tr>
<tr>
<td style="text-align:center">top_img</td>
<td>【可选】页面顶部图片</td>
</tr>
<tr>
<td style="text-align:center">mathjax</td>
<td>【可选】显示mathjax(当设置mathjax的per_page: false时，才需要配置，默认false)</td>
</tr>
<tr>
<td style="text-align:center">katex</td>
<td>【可选】显示katex(当设置katex的per_page: false时，才需要配置，默认false)</td>
</tr>
<tr>
<td style="text-align:center">aside</td>
<td>【可选】显示侧边栏(默认true)</td>
</tr>
<tr>
<td style="text-align:center">aplayer</td>
<td>【可选】在需要的页面加载aplayer的js和css,请参考文章下面的音乐配置</td>
</tr>
<tr>
<td style="text-align:center">highlight_shrink</td>
<td>【可选】配置代码框是否展开(true/false)(默认为设置中highlight_shrink的配置)</td>
</tr>
<tr>
<td style="text-align:center">tags</td>
<td>【可选】文章标签</td>
</tr>
<tr>
<td style="text-align:center">categories</td>
<td>【可选】文章分类</td>
</tr>
<tr>
<td style="text-align:center">cover</td>
<td>【可选】文章缩略图(如果没有设置top_img,文章页顶部将显示缩略图，可设为false/图片地址/留空)</td>
</tr>
<tr>
<td style="text-align:center">toc</td>
<td>【可选】显示文章TOC(默认为设置中toc的enable配置)</td>
</tr>
<tr>
<td style="text-align:center">toc_number</td>
<td>【可选】显示toc_number(默认为设置中toc的number配置)</td>
</tr>
<tr>
<td style="text-align:center">toc_style_simple</td>
<td>【可选】显示toc简洁模式</td>
</tr>
<tr>
<td style="text-align:center">copyright</td>
<td>【可选】显示文章版权模块(默认为设置中post_copyright的enable配置)</td>
</tr>
<tr>
<td style="text-align:center">copyright_author</td>
<td>【可选】文章版权模块的文章作者</td>
</tr>
<tr>
<td style="text-align:center">copyright_author_href</td>
<td>【可选】文章版权模块的文章作者链接</td>
</tr>
<tr>
<td style="text-align:center">copyright_url</td>
<td>【可选】文章版权模块的文章连结链接</td>
</tr>
<tr>
<td style="text-align:center">copyright_info</td>
<td>【可选】文章版权模块的版权声明文字</td>
</tr>
<tr>
<td style="text-align:center">abcjs</td>
<td>【可选】加载 abcjs (当设置 abcjs 的 per_page: false 时，才需要配置，默认 false )</td>
</tr>
</tbody>
</table>
<h3 id="categories分类标签应用"><a class="markdownIt-Anchor" href="#categories分类标签应用"></a> categories分类标签应用</h3>
<h3 id="子分类"><a class="markdownIt-Anchor" href="#子分类"></a> <strong>子分类</strong></h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">categories:</span><br><span class="line">  - 一级分类</span><br><span class="line">  - 子级分类</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="多个分类"><a class="markdownIt-Anchor" href="#多个分类"></a> <strong>多个分类</strong></h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">categories:</span><br><span class="line">  - [分类一]</span><br><span class="line">  - [分类二]</span><br></pre></td></tr></table></figure>
<p><strong>将文章分入不同的一级分类和二级分类</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">categories:</span><br><span class="line">  - [分类一,子级分类]</span><br><span class="line">  - [分类二]</span><br></pre></td></tr></table></figure>
<h2 id="️系统相关"><a class="markdownIt-Anchor" href="#️系统相关"></a> ⚙️系统相关</h2>
<p>1、查看已装插件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm ls --depth 0</span><br></pre></td></tr></table></figure>
<p>2、插件卸载  hexo-renderer-marked为例</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm uninstall hexo-renderer-marked --save</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Git安装与配置</title>
    <url>/2023/05/02/Git%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h2 id="安装"><a class="markdownIt-Anchor" href="#安装"></a> 安装</h2>
<h3 id="1下载-git"><a class="markdownIt-Anchor" href="#1下载-git"></a> 1.下载 Git</h3>
<p>根据操作系统类型下载对应版本</p>
<p><a href="https://git-scm.com/download">Git官网下载</a><br />
<img src="https://cdn.jsdelivr.net/gh/Captain997/Blogimage@main/blogimg/2023-5-2/1.png" alt="" /></p>
<h3 id="2安装"><a class="markdownIt-Anchor" href="#2安装"></a> 2.安装</h3>
<p>大部分人用Windows，固以Windows为例<br />
双击打开下载好的  Git-2.40.1-64-bit<br />
默认路径，可按需修改<br />
<img src="https://cdn.jsdelivr.net/gh/Captain997/Blogimage@main/blogimg/2023-5-2/2.png" alt="" /></p>
<h3 id="3安装选项"><a class="markdownIt-Anchor" href="#3安装选项"></a> 3.安装选项</h3>
<p>如果不明确自己的需求，建议默认即可<br />
<img src="https://cdn.jsdelivr.net/gh/Captain997/Blogimage@main/blogimg/2023-5-2/3.png" alt="" /></p>
<h3 id="4默认分支配置"><a class="markdownIt-Anchor" href="#4默认分支配置"></a> 4.默认分支配置</h3>
<p>Git默认的是master分支，但目前GitHub创建的分支默认已经改成main<br />
所以建议将Git的默认分支设置成main<br />
<img src="https://cdn.jsdelivr.net/gh/Captain997/Blogimage@main/blogimg/2023-5-2/4.png" alt="" /><br />
接下来无脑下一步即可</p>
<h3 id="5安装成功"><a class="markdownIt-Anchor" href="#5安装成功"></a> 5.安装成功</h3>
<p><img src="https://cdn.jsdelivr.net/gh/Captain997/Blogimage@main/blogimg/2023-5-2/5.png" alt="" /></p>
<h2 id="验证git是否安装成功"><a class="markdownIt-Anchor" href="#验证git是否安装成功"></a> 验证Git是否安装成功</h2>
<p>在PowerShell或CMD运行git --version查看Git版本</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git --version</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/Captain997/Blogimage@main/blogimg/2023-5-2/git%E7%89%88%E6%9C%AC.png" alt="" /></p>
<h2 id="配置git关联到远端仓库"><a class="markdownIt-Anchor" href="#配置git关联到远端仓库"></a> 配置Git关联到远端仓库</h2>
<p>这里主要介绍免费公开的代码托管平台，自建平台请以实际为准<br />
<strong>GitHub：全球最大的代码托管网站和开源社区</strong><br />
<strong>Gitee（码云）：开源中国于2013年推出的基于Git的代码托管和协作开发平台也是目前是中国大陆规模最大的代码托管平台</strong></p>
<p><strong>这里以GitHub为例，gitee也大差不差的步骤</strong></p>
<h3 id="1打开git-bash"><a class="markdownIt-Anchor" href="#1打开git-bash"></a> 1.打开Git Bash</h3>
<p><strong>右键打开Git Bash Here</strong><br />
<img src="https://cdn.jsdelivr.net/gh/Captain997/Blogimage@main/blogimg/2023-5-2/GitBash.png" alt="" /></p>
<h3 id="2设置github用户名-邮箱"><a class="markdownIt-Anchor" href="#2设置github用户名-邮箱"></a> 2.设置GitHub用户名、邮箱</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git config --global user.name &quot;你的GitHub账户名字&quot;</span><br></pre></td></tr></table></figure>
<p><strong>回车，接着输入</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git config --global user.email &quot;你的GitHub绑定邮箱&quot;</span><br></pre></td></tr></table></figure>
<p><strong>回车确认</strong></p>
<p><img src="https://cdn.jsdelivr.net/gh/Captain997/Blogimage@main/blogimg/2023-5-2/git%E4%BF%A1%E6%81%AF%E7%BB%91%E5%AE%9A2.png" alt="" /></p>
<h3 id="3生成ssh公钥"><a class="markdownIt-Anchor" href="#3生成ssh公钥"></a> 3.生成ssh公钥</h3>
<p>生成公钥</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;你的GitHub绑定邮箱&quot;</span><br></pre></td></tr></table></figure>
<p>输入后按3次回车</p>
<p><img src="https://cdn.jsdelivr.net/gh/Captain997/Blogimage@main/blogimg/2023-5-2/ssh%E5%85%AC%E9%92%A5%E5%8C%992.png" alt="" /></p>
<h3 id="4验证配置是否成功"><a class="markdownIt-Anchor" href="#4验证配置是否成功"></a> 4.验证配置是否成功</h3>
<p>依次输入下列命令，如若出现设置信息即配置成功</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git config user.name</span><br><span class="line">git config user.email</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/Captain997/Blogimage@main/blogimg/2023-5-2/%E9%85%8D%E7%BD%AE%E9%AA%8C%E8%AF%81.png" alt="" /></p>
<h3 id="5在github添加生成的公钥"><a class="markdownIt-Anchor" href="#5在github添加生成的公钥"></a> 5.在GitHub添加生成的公钥</h3>
<p>登录GitHub点击右上角的头像</p>
<p>依次点击Settings --&gt; SSH and GPG keys --&gt; New SSH key</p>
<p><img src="https://cdn.jsdelivr.net/gh/Captain997/Blogimage@main/blogimg/2023-5-2/giyhubaddsshkeys.png" alt="" /></p>
<h3 id="6添加公钥"><a class="markdownIt-Anchor" href="#6添加公钥"></a> 6.添加公钥</h3>
<p>在路径C:\Users\xxxx(用户名)\下有名为.ssh的文件夹</p>
<p>进入.ssh文件夹，用记事本打开<strong>id_rsa.pub</strong></p>
<p><img src="https://cdn.jsdelivr.net/gh/Captain997/Blogimage@main/blogimg/2023-5-2/%E6%B7%BB%E5%8A%A0%E5%85%AC%E9%92%A5.png" alt="" /></p>
<h3 id="7连接验证"><a class="markdownIt-Anchor" href="#7连接验证"></a> 7.连接验证</h3>
<p>输入</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure>
<p><strong>成功结果如下</strong></p>
<p><img src="https://cdn.jsdelivr.net/gh/Captain997/Blogimage@main/blogimg/2023-5-2/%E8%BF%9E%E6%8E%A5%E9%AA%8C%E8%AF%81.png" alt="" /></p>
<p><strong>至此已安装和配置完成～</strong></p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>教程</tag>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>MacOS应用推荐</title>
    <url>/2023/05/02/MacOS%E5%BA%94%E7%94%A8%E6%8E%A8%E8%8D%90/</url>
    <content><![CDATA[<p>MacOS应用推荐MacOS应用推荐MacOS应用推荐</p>
]]></content>
      <categories>
        <category>应用推荐</category>
      </categories>
      <tags>
        <tag>app</tag>
        <tag>MacOS</tag>
      </tags>
  </entry>
  <entry>
    <title>Markdown笔记</title>
    <url>/2023/05/02/Markdown%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="语法"><a class="markdownIt-Anchor" href="#语法"></a> 语法</h1>
<h2 id="1标题"><a class="markdownIt-Anchor" href="#1标题"></a> 1.标题</h2>
<h1 id="一级标题-写法-标题名"><a class="markdownIt-Anchor" href="#一级标题-写法-标题名"></a> 一级标题    写法:  # 标题名</h1>
<h2 id="二级标题-写法-标题名"><a class="markdownIt-Anchor" href="#二级标题-写法-标题名"></a> 二级标题    写法:  ## 标题名</h2>
<h3 id="三级标题-写法-标题名"><a class="markdownIt-Anchor" href="#三级标题-写法-标题名"></a> 三级标题    写法:  ### 标题名</h3>
<h2 id="2空格-写法-nbsp空格"><a class="markdownIt-Anchor" href="#2空格-写法-nbsp空格"></a> 2.空格    写法:  &amp;nbsp+空格;</h2>
<p>    空两格效果</p>
<p>测试测试测试测试测试测试测试</p>
<h1 id="typora快捷键"><a class="markdownIt-Anchor" href="#typora快捷键"></a> Typora快捷键</h1>
<p>1.新建：Ctrl+N<br />
2.打开：Ctrl+O<br />
3.打印：Ctrl+P<br />
4.保存：Ctrl+S<br />
5.另存为：Ctrl+Shift+S<br />
6.偏好设置：Ctrl+,<br />
7.关闭：Ctrl+W<br />
8.查找：Ctrl+F</p>
<p>一级标题：⌘1 (command + 1)<br />
二级标题：⌘2 (command + 2)<br />
三级标题：⌘3 (command + 3)</p>
<p>表格：⌥⌘T (option + command + T)<br />
代码块：⌥⌘C (option + command + C)<br />
公式块：⌥⌘B (option + command + B)</p>
<p>引用：⌥⌘Q (option + command + Q)<br />
有序列表：⌥⌘O (option + command + O)<br />
无序列表：⌥⌘U (option + command + U)</p>
<p>任务列表：⌥⌘X (option + command + X)<br />
列表缩进：<br />
​ 增加缩进：⌘] ( command + ])<br />
​ 减少缩进：⌘[ ( command + [)</p>
<p>链接引用：⌥⌘L (option + command + L)<br />
脚注：⌥⌘R (option + command + R)</p>
<p>水平分割线：⇧⌘- (shift + command + -)</p>
<p>加粗：⌘B (command + B)<br />
斜体：⌘I (command + I)<br />
下划线：⌘U (command + U)</p>
<p>代码：⇧⌘<code>(shift + command +</code>)</p>
<p>内联公式：⌃M (control + M)<br />
删除线：⌃~ (control + ~)<br />
注释：⌃- (control + -)</p>
<p>超链接:⌘K (command + K)<br />
图像：⌃⌘I (control + command + U)<br />
清除样式：⌘\ (command + )</p>
<p>显示/隐藏侧边栏：⇧⌘L (shift + command + L)<br />
大纲视图：⌃⌘1 (control + command + 1)<br />
文档列表视图：⌃⌘2 (control + command +2)<br />
文件树视图：⌃⌘3 (control + command + 3)</p>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows应用推荐</title>
    <url>/2023/05/02/Windows%E5%BA%94%E7%94%A8%E6%8E%A8%E8%8D%90/</url>
    <content><![CDATA[<p>Windows应用推荐Windows应用推荐</p>
]]></content>
      <categories>
        <category>应用推荐</category>
      </categories>
      <tags>
        <tag>app</tag>
        <tag>Windows</tag>
      </tags>
  </entry>
  <entry>
    <title>构建开源的GPT4</title>
    <url>/2023/05/10/%E6%9E%84%E5%BB%BA%E5%BC%80%E6%BA%90%E7%9A%84GPT4/</url>
    <content><![CDATA[<h3 id="github开源地址"><a class="markdownIt-Anchor" href="#github开源地址"></a> <a href="https://github.com/xtekky/gpt4free">GitHub开源地址</a></h3>
<h3 id="克隆文件至本地"><a class="markdownIt-Anchor" href="#克隆文件至本地"></a> 克隆文件至本地</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/xtekky/gpt4free.git</span><br></pre></td></tr></table></figure>
<h3 id="下载依赖"><a class="markdownIt-Anchor" href="#下载依赖"></a> 下载依赖</h3>
<p><strong>进入gpt4free根目录执行</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pip3 install -r requirements.txt</span><br></pre></td></tr></table></figure>
<h3 id="将gui拷贝至gpt4free根目录"><a class="markdownIt-Anchor" href="#将gui拷贝至gpt4free根目录"></a> 将gui拷贝至gpt4free根目录</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cp gui/streamlit_app.py .</span><br></pre></td></tr></table></figure>
<h3 id="运行"><a class="markdownIt-Anchor" href="#运行"></a> 运行</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python3 -m streamlit run streamlit_app.py</span><br></pre></td></tr></table></figure>
<p><strong>或者</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">streamlit run streamlit_app.py</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>教程</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>ChatGPT</tag>
        <tag>GPT</tag>
      </tags>
  </entry>
  <entry>
    <title>将本地项目推送到GitHub</title>
    <url>/2023/04/20/%E5%B0%86%E6%9C%AC%E5%9C%B0%E9%A1%B9%E7%9B%AE%E6%8E%A8%E9%80%81%E5%88%B0GitHub/</url>
    <content><![CDATA[<p><strong>说明：</strong></p>
<p>1.默认已安装和配置git，如果没配置好请跳转<a href="http://epochge.com/2023/05/02/Git%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/">Git安装与配置</a></p>
<p>2.仓库名字：Test</p>
<h3 id="1在github创建新test仓库"><a class="markdownIt-Anchor" href="#1在github创建新test仓库"></a> 1.在GitHub创建新Test仓库</h3>
<p><img src="https://cdn.jsdelivr.net/gh/Captain997/Blogimage@main/blogimg/2023-5-2/%E5%88%9B%E5%BB%BA%E4%BB%93%E5%BA%93.png" alt="" /></p>
<h3 id="2项目初始化"><a class="markdownIt-Anchor" href="#2项目初始化"></a> 2.项目初始化</h3>
<p>进入项目根目录执行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/Captain997/Blogimage@main/blogimg/2023-5-2/%E6%96%87%E4%BB%B6%E5%88%9D%E5%A7%8B%E5%8C%96.png" alt="" /></p>
<p>初始化后在项目目录多出了.git文件夹</p>
<h3 id="3查看提交状态"><a class="markdownIt-Anchor" href="#3查看提交状态"></a> 3.查看提交状态</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git status</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/Captain997/Blogimage@main/blogimg/2023-5-2/%E6%8F%90%E4%BA%A4%E7%8A%B6%E6%80%81%E6%9F%A5%E8%AF%A2.png" alt="" /></p>
<h3 id="4git-add-添加内容到索引"><a class="markdownIt-Anchor" href="#4git-add-添加内容到索引"></a> 4.git add  添加内容到索引</h3>
<p>输入</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git add A</span><br></pre></td></tr></table></figure>
<p>或者</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git add .</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/Captain997/Blogimage@main/blogimg/2023-5-2/%E6%8F%90%E4%BA%A4%E5%90%8E%E7%8A%B6%E6%80%81.png" alt="" /></p>
<h3 id="5提交注释"><a class="markdownIt-Anchor" href="#5提交注释"></a> 5.提交注释</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git commit -m &#x27;内容&#x27;</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/Captain997/Blogimage@main/blogimg/2023-5-2/%E6%8F%90%E4%BA%A4%E6%B3%A8%E9%87%8A.png" alt="" /></p>
<h3 id="6将本地-文件与github仓库关联"><a class="markdownIt-Anchor" href="#6将本地-文件与github仓库关联"></a> 6.将本地 文件与GitHub仓库关联</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git remote add origin 仓库链接</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/Captain997/Blogimage@main/blogimg/2023-5-2/%E6%9C%AC%E5%9C%B0%E5%85%B3%E8%81%94GitHub%E4%BB%93%E5%BA%93.png" alt="" /></p>
<h3 id="7推送到github远程仓库"><a class="markdownIt-Anchor" href="#7推送到github远程仓库"></a> 7.推送到GitHub远程仓库</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git push -u origin main</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/Captain997/Blogimage@main/blogimg/2023-5-2/%E4%B8%8A%E4%BC%A0%E6%88%90%E5%8A%9F.png" alt="" /></p>
<p><strong>至此教程完成，这只是一个关于Git和GitHub的初步应用，实际上它们还有很多强大的功能需要你去探索</strong></p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>Git</tag>
        <tag>GitHub</tag>
      </tags>
  </entry>
  <entry>
    <title>自编译OpenWrt固件</title>
    <url>/2023/04/20/%E8%87%AA%E7%BC%96%E8%AF%91OpenWrt%E5%9B%BA%E4%BB%B6/</url>
    <content><![CDATA[<h2 id="环境搭建"><a class="markdownIt-Anchor" href="#环境搭建"></a> 环境搭建</h2>
<h3 id="基础环境"><a class="markdownIt-Anchor" href="#基础环境"></a> 基础环境</h3>
<p><strong>1、VMware虚拟机</strong><br />
<strong>2、Ubuntu 22.04.2 LTS</strong><br />
Ubuntu<a href="https://ubuntu.com/download/desktop">官网下载</a></p>
<h3 id="ubuntu系统更新"><a class="markdownIt-Anchor" href="#ubuntu系统更新"></a> Ubuntu系统更新</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt update -y</span><br><span class="line">sudo apt full-upgrade -y</span><br></pre></td></tr></table></figure>
<h3 id="安装编译依赖"><a class="markdownIt-Anchor" href="#安装编译依赖"></a> 安装编译依赖</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt install build-essential clang flex g++ gawk gcc-multilib gettext git libncurses5-dev libssl-dev python3-distutils rsync unzip zlib1g-dev file wget</span><br></pre></td></tr></table></figure>
<h2 id="首次编译"><a class="markdownIt-Anchor" href="#首次编译"></a> 首次编译</h2>
<p><font color=#ea00ff>编译在普通用户模式下编译，在root模式下会有蜜汁问题</font><br />
OpenWrt源码有不同的分支，它们都有属于自己的特色，具体差异不在这赘述<br />
1.<a href="https://github.com/openwrt/openwrt">OpenWrt官方</a><br />
2.<a href="https://github.com/coolsnowwolf/lede">LEDE</a><br />
3.<a href="https://github.com/Lienol/openwrt">Lienol</a><br />
4.<a href="https://github.com/immortalwrt/immortalwrt">immortalwrt</a></p>
<p>这里以LEDE源码为例</p>
<h3 id="拉取lede-源码"><a class="markdownIt-Anchor" href="#拉取lede-源码"></a> 拉取LEDE 源码</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/coolsnowwolf/lede</span><br></pre></td></tr></table></figure>
<h3 id="进入lede"><a class="markdownIt-Anchor" href="#进入lede"></a> 进入lede</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd lede</span><br></pre></td></tr></table></figure>
<h3 id="添加插件源"><a class="markdownIt-Anchor" href="#添加插件源"></a> 添加插件源</h3>
<p>之所以选lede是因为大佬默认已经集成了很多常用插件，但是如果有小众需求可以自己将插件源添加进来,在lede根目录执行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim feeds.conf.default</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/Captain997/Blogimage@main/blogimg/2023-4-20/%E6%8F%92%E4%BB%B6%E6%BA%90.png" alt="" /><br />
<strong>将需要启用的插件源去掉“#”即可，也可自行加入第三方的插件源</strong></p>
<h3 id="插件更新与安装"><a class="markdownIt-Anchor" href="#插件更新与安装"></a> 插件更新与安装</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">./scripts/feeds clean</span><br><span class="line">./scripts/feeds update -a</span><br><span class="line">./scripts/feeds install -a</span><br></pre></td></tr></table></figure>
<h3 id="个性化配置可选非必要"><a class="markdownIt-Anchor" href="#个性化配置可选非必要"></a> 个性化配置(可选，非必要)</h3>
<p>1.修改默认IP为 10.1.1.1</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sed -i &#x27;s/192.168.1.1/10.1.1.1/g&#x27; package/base-files/files/bin/config_generate</span><br></pre></td></tr></table></figure>
<p>2.修改默认主机名为 ABCD</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sed -i &#x27;/uci commit system/i\uci set system.@system[0].hostname=&#x27;ABCD&#x27;&#x27; package/lean/default-settings/files/zzz-default-settings</span><br></pre></td></tr></table></figure>
<p>3.修改默认主题</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sed -i &quot;s/luci-theme-bootstrap/luci-theme-argon/g&quot; feeds/luci/collections/luci/Makefile</span><br></pre></td></tr></table></figure>
<h3 id="生成配置"><a class="markdownIt-Anchor" href="#生成配置"></a> 生成配置</h3>
<p>在lede根目录执行make menuconfig进入编译菜单</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">make menuconfig</span><br></pre></td></tr></table></figure>
<h4 id="常用菜单说明"><a class="markdownIt-Anchor" href="#常用菜单说明"></a> 常用菜单说明</h4>
<p><strong>1.选择 CPU 类型</strong><br />
Target System (x86) --&gt; # 软路由选择 x86，硬路由根据型号厂家自行选择<br />
Subtarget (x86_64) --&gt; # CPU 子选项<br />
Target Profile (Generic x86/64) --&gt; # 厂家具体型号<br />
<strong>2.设置镜像编译的格式（squashfs，ext4</strong>）<br />
Target Images --&gt; # 默认 squashfs<br />
<strong>3.添加较多插件时，为了避免空间不足，建议修改下面两项默认大小（x86/64）</strong><br />
Target Images --&gt; (16) Kernel partition size (in MB) # 默认是16，建议修改为256<br />
Target Images --&gt; (400) Root filesystem partition size (in MB) # 默认是400，建议修改为512<br />
<strong>4.开启 IPv6 支持</strong><br />
Extra packages --&gt; ipv6helper（选定这个后，下面几项会自动选择）<br />
Network --&gt; odhcp6c<br />
Network --&gt; odhcpd-ipv6only<br />
LuCI --&gt; Protocols --&gt; luci-proto-ipv6<br />
LuCI --&gt; Protocols --&gt; luci-proto-ppp<br />
<strong>5.开启适用于 VMware 的 VMware Tools</strong><br />
Utilities --&gt; open-vm-tools<br />
Utilities --&gt; open-vm-tools-fuse<br />
<strong>6.选择插件</strong><br />
LuCI --&gt; Applications # 根据需要选择，* 代表编入固件，M 表示编译成模块或者IPK包，为空表示不编译<br />
<strong>7.选择主题</strong><br />
LuCI --&gt; Themes # 选择喜欢的主题，可以选多个</p>
<h4 id="插件说明"><a class="markdownIt-Anchor" href="#插件说明"></a> 插件说明</h4>
<p><a href="https://vvmi.net/archives/openwrtlist/">插件对照表</a></p>
<h3 id="下载编译所需插件"><a class="markdownIt-Anchor" href="#下载编译所需插件"></a> 下载编译所需插件</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">make download -j8</span><br></pre></td></tr></table></figure>
<h3 id="检查文件完整性"><a class="markdownIt-Anchor" href="#检查文件完整性"></a> 检查文件完整性</h3>
<p>1.查找文件小于1k的文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">find dl -size -1024c -exec ls -l &#123;&#125; \;</span><br></pre></td></tr></table></figure>
<p>2.删除小于1k的文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">find dl -size -1024c -exec rm -f &#123;&#125; \;</span><br></pre></td></tr></table></figure>
<p>3.继续下载、检查步骤</p>
<h3 id="编译"><a class="markdownIt-Anchor" href="#编译"></a> 编译</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">make V=s -j1</span><br></pre></td></tr></table></figure>
<p>V=s表示开启详情，-j1表示编译线程，可根据实际调整<br />
<strong>编译完成默认的编译输出路径为bin/targets，默认密码是password</strong></p>
<h2 id="再次编译"><a class="markdownIt-Anchor" href="#再次编译"></a> 再次编译</h2>
<h3 id="拉取最新lede源码"><a class="markdownIt-Anchor" href="#拉取最新lede源码"></a> 拉取最新lede源码</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd lede</span><br><span class="line">git pull</span><br></pre></td></tr></table></figure>
<h3 id="更新-feeds-源中的插件"><a class="markdownIt-Anchor" href="#更新-feeds-源中的插件"></a> 更新 feeds 源中的插件</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">./scripts/feeds update -a</span><br><span class="line">./scripts/feeds install -a</span><br></pre></td></tr></table></figure>
<h3 id="清除上一次编译文件和目录可选非必要"><a class="markdownIt-Anchor" href="#清除上一次编译文件和目录可选非必要"></a> 清除上一次编译文件和目录（可选，非必要）</h3>
<p><strong>1.源码较大更新，删除 /bin 和 /build_dir 目录中的文件</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">make clean</span><br></pre></td></tr></table></figure>
<p><strong>2.更换架构，删除 /bin 和 /build_dir 目录的中的文件（make clean），以及 /staging_dir、/toolchain、/tmp 和 /logs 中的文件</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">make dirclean</span><br></pre></td></tr></table></figure>
<p><strong>3.完全清理，回到刚git clone初始状态</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">make distclean</span><br></pre></td></tr></table></figure>
<h3 id="如果需要重生成新配置"><a class="markdownIt-Anchor" href="#如果需要重生成新配置"></a> 如果需要重生成新配置</h3>
<p><strong>1.清除临时文件和编译配置文件</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rm -rf ./tmp &amp;&amp; rm -rf .config</span><br></pre></td></tr></table></figure>
<p><strong>2.重复执行2.7-2.9节内容</strong></p>
<p><strong>至此教程结束～</strong></p>
]]></content>
      <categories>
        <category>教程</category>
        <category>OpenWrt</category>
      </categories>
      <tags>
        <tag>OpenWrt</tag>
      </tags>
  </entry>
</search>
