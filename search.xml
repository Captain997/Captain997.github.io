<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Android应用推荐</title>
    <url>/2023/04/21/Android%E5%BA%94%E7%94%A8%E6%8E%A8%E8%8D%90/</url>
    <content><![CDATA[<h2 id="1-你跳跳"><a class="markdownIt-Anchor" href="#1-你跳跳"></a> 1、你跳跳</h2>
<p><strong>帮助我们自动跳过一些app开屏烦人的界面，如广告</strong><br />
<strong>该应用不会无度索取用户权限，是一款良心app</strong><br />
<img src="https://cdn.jsdelivr.net/gh/Captain997/Blogimage@main/blogimg/2023-4-21/turnonltt.gif" alt="" /></p>
<h3 id="官网地址李跳跳"><a class="markdownIt-Anchor" href="#官网地址李跳跳"></a> 官网地址：<a href="https://litiaotiao.cn/">李跳跳</a></h3>
<h3 id="高速下载蓝奏云-密码-cf24"><a class="markdownIt-Anchor" href="#高速下载蓝奏云-密码-cf24"></a> 高速下载：<a href="https://wwjw.lanzoum.com/iKBU80tn5pqj?pwd=cf24#cf24">蓝奏云</a>   密码: <code>cf24</code></h3>
]]></content>
      <categories>
        <category>应用推荐</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>app</tag>
      </tags>
  </entry>
  <entry>
    <title>E5开发者计划续订</title>
    <url>/2023/04/30/E5%E5%BC%80%E5%8F%91%E8%80%85%E8%AE%A1%E5%88%92%E7%BB%AD%E8%AE%A2/</url>
    <content><![CDATA[<p>E5开发者计划续订E5开发者计划续订</p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>Microsoft 365</tag>
        <tag>E5开发</tag>
      </tags>
  </entry>
  <entry>
    <title>MacOS应用推荐</title>
    <url>/2023/05/02/MacOS%E5%BA%94%E7%94%A8%E6%8E%A8%E8%8D%90/</url>
    <content><![CDATA[<p>MacOS应用推荐MacOS应用推荐MacOS应用推荐</p>
]]></content>
      <categories>
        <category>应用推荐</category>
      </categories>
      <tags>
        <tag>app</tag>
        <tag>MacOS</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo基础命令</title>
    <url>/2023/04/19/Hexo%E5%9F%BA%E7%A1%80%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<h2 id="️基础写作"><a class="markdownIt-Anchor" href="#️基础写作"></a> ✏️基础写作</h2>
<p>1、创建新文章</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo n &quot;文章名&quot;</span><br></pre></td></tr></table></figure>
<p>2、生成静态文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure>
<p>3、启动本地服务器</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure>
<p>4、将代码推送到远端服务器、部署网站</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure>
<p>5、清理hexo数据并重新生成页面并部署</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br></pre></td></tr></table></figure>
<h2 id="front-matter参数"><a class="markdownIt-Anchor" href="#front-matter参数"></a> Front-matter参数</h2>
<table>
<thead>
<tr>
<th style="text-align:center">标签</th>
<th>注解</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">title</td>
<td>【必需】页面标题</td>
</tr>
<tr>
<td style="text-align:center">date</td>
<td>【必需】页面创建日期</td>
</tr>
<tr>
<td style="text-align:center">type</td>
<td>【必需】标签、分类和友情链接三个页面需要配置</td>
</tr>
<tr>
<td style="text-align:center">updated</td>
<td>【可选】页面更新日期</td>
</tr>
<tr>
<td style="text-align:center">description</td>
<td>【可选】页面描述</td>
</tr>
<tr>
<td style="text-align:center">keywords</td>
<td>【可选】页面关键字</td>
</tr>
<tr>
<td style="text-align:center">comments</td>
<td>【可选】显示页面评论模块(默认true)</td>
</tr>
<tr>
<td style="text-align:center">top_img</td>
<td>【可选】页面顶部图片</td>
</tr>
<tr>
<td style="text-align:center">mathjax</td>
<td>【可选】显示mathjax(当设置mathjax的per_page: false时，才需要配置，默认false)</td>
</tr>
<tr>
<td style="text-align:center">katex</td>
<td>【可选】显示katex(当设置katex的per_page: false时，才需要配置，默认false)</td>
</tr>
<tr>
<td style="text-align:center">aside</td>
<td>【可选】显示侧边栏(默认true)</td>
</tr>
<tr>
<td style="text-align:center">aplayer</td>
<td>【可选】在需要的页面加载aplayer的js和css,请参考文章下面的音乐配置</td>
</tr>
<tr>
<td style="text-align:center">highlight_shrink</td>
<td>【可选】配置代码框是否展开(true/false)(默认为设置中highlight_shrink的配置)</td>
</tr>
<tr>
<td style="text-align:center">tags</td>
<td>【可选】文章标签</td>
</tr>
<tr>
<td style="text-align:center">categories</td>
<td>【可选】文章分类</td>
</tr>
<tr>
<td style="text-align:center">cover</td>
<td>【可选】文章缩略图(如果没有设置top_img,文章页顶部将显示缩略图，可设为false/图片地址/留空)</td>
</tr>
<tr>
<td style="text-align:center">toc</td>
<td>【可选】显示文章TOC(默认为设置中toc的enable配置)</td>
</tr>
<tr>
<td style="text-align:center">toc_number</td>
<td>【可选】显示toc_number(默认为设置中toc的number配置)</td>
</tr>
<tr>
<td style="text-align:center">toc_style_simple</td>
<td>【可选】显示toc简洁模式</td>
</tr>
<tr>
<td style="text-align:center">copyright</td>
<td>【可选】显示文章版权模块(默认为设置中post_copyright的enable配置)</td>
</tr>
<tr>
<td style="text-align:center">copyright_author</td>
<td>【可选】文章版权模块的文章作者</td>
</tr>
<tr>
<td style="text-align:center">copyright_author_href</td>
<td>【可选】文章版权模块的文章作者链接</td>
</tr>
<tr>
<td style="text-align:center">copyright_url</td>
<td>【可选】文章版权模块的文章连结链接</td>
</tr>
<tr>
<td style="text-align:center">copyright_info</td>
<td>【可选】文章版权模块的版权声明文字</td>
</tr>
<tr>
<td style="text-align:center">abcjs</td>
<td>【可选】加载 abcjs (当设置 abcjs 的 per_page: false 时，才需要配置，默认 false )</td>
</tr>
</tbody>
</table>
<h2 id="️系统相关"><a class="markdownIt-Anchor" href="#️系统相关"></a> ⚙️系统相关</h2>
<p>1、查看已装插件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm ls --depth 0</span><br></pre></td></tr></table></figure>
<p>2、插件卸载  hexo-renderer-marked为例</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm uninstall hexo-renderer-marked --save</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Markdown笔记</title>
    <url>/2023/05/02/Markdown%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="语法"><a class="markdownIt-Anchor" href="#语法"></a> 语法</h1>
<h2 id="1标题"><a class="markdownIt-Anchor" href="#1标题"></a> 1.标题</h2>
<h1 id="一级标题-写法-标题名"><a class="markdownIt-Anchor" href="#一级标题-写法-标题名"></a> 一级标题    写法:  # 标题名</h1>
<h2 id="二级标题-写法-标题名"><a class="markdownIt-Anchor" href="#二级标题-写法-标题名"></a> 二级标题    写法:  ## 标题名</h2>
<h3 id="三级标题-写法-标题名"><a class="markdownIt-Anchor" href="#三级标题-写法-标题名"></a> 三级标题    写法:  ### 标题名</h3>
<h2 id="2空格-写法-nbsp空格"><a class="markdownIt-Anchor" href="#2空格-写法-nbsp空格"></a> 2.空格    写法:  &amp;nbsp+空格;</h2>
<p>    空两格效果</p>
<p>测试测试测试测试测试测试测试</p>
<h1 id="typora快捷键"><a class="markdownIt-Anchor" href="#typora快捷键"></a> Typora快捷键</h1>
<p>1.新建：Ctrl+N<br />
2.打开：Ctrl+O<br />
3.打印：Ctrl+P<br />
4.保存：Ctrl+S<br />
5.另存为：Ctrl+Shift+S<br />
6.偏好设置：Ctrl+,<br />
7.关闭：Ctrl+W<br />
8.查找：Ctrl+F</p>
<p>一级标题：⌘1 (command + 1)<br />
二级标题：⌘2 (command + 2)<br />
三级标题：⌘3 (command + 3)</p>
<p>表格：⌥⌘T (option + command + T)<br />
代码块：⌥⌘C (option + command + C)<br />
公式块：⌥⌘B (option + command + B)</p>
<p>引用：⌥⌘Q (option + command + Q)<br />
有序列表：⌥⌘O (option + command + O)<br />
无序列表：⌥⌘U (option + command + U)</p>
<p>任务列表：⌥⌘X (option + command + X)<br />
列表缩进：<br />
​ 增加缩进：⌘] ( command + ])<br />
​ 减少缩进：⌘[ ( command + [)</p>
<p>链接引用：⌥⌘L (option + command + L)<br />
脚注：⌥⌘R (option + command + R)</p>
<p>水平分割线：⇧⌘- (shift + command + -)</p>
<p>加粗：⌘B (command + B)<br />
斜体：⌘I (command + I)<br />
下划线：⌘U (command + U)</p>
<p>代码：⇧⌘<code>(shift + command +</code>)</p>
<p>内联公式：⌃M (control + M)<br />
删除线：⌃~ (control + ~)<br />
注释：⌃- (control + -)</p>
<p>超链接:⌘K (command + K)<br />
图像：⌃⌘I (control + command + U)<br />
清除样式：⌘\ (command + )</p>
<p>显示/隐藏侧边栏：⇧⌘L (shift + command + L)<br />
大纲视图：⌃⌘1 (control + command + 1)<br />
文档列表视图：⌃⌘2 (control + command +2)<br />
文件树视图：⌃⌘3 (control + command + 3)</p>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows应用推荐</title>
    <url>/2023/05/02/Windows%E5%BA%94%E7%94%A8%E6%8E%A8%E8%8D%90/</url>
    <content><![CDATA[<p>Windows应用推荐Windows应用推荐</p>
]]></content>
      <categories>
        <category>应用推荐</category>
      </categories>
      <tags>
        <tag>app</tag>
        <tag>Windows</tag>
      </tags>
  </entry>
  <entry>
    <title>将本地项目推送到GitHub</title>
    <url>/2023/04/20/%E5%B0%86%E6%9C%AC%E5%9C%B0%E9%A1%B9%E7%9B%AE%E6%8E%A8%E9%80%81%E5%88%B0GitHub/</url>
    <content><![CDATA[<p>说明：</p>
<p>默认已安装和配置git，如果没配置好请跳转</p>
<h3 id="1在github创建test仓库"><a class="markdownIt-Anchor" href="#1在github创建test仓库"></a> 1.在GitHub创建Test仓库</h3>
<p>1.初始化仓库：git init</p>
<p>2.配置签名：① git config <a href="http://user.name">user.name</a> “Zhang3”  ② git config user.email “<a href="mailto:zhang3@163.com">zhang3@163.com</a>”<br />
–签名配置完成后，可以隐藏目录下找到config，查看或编辑签名。假如工作中又来了一个项目，但这个项目的账密想签别的名字。可以在工程下修改。<br />
但一般在公司中多个项目都一样的配置就没必要放在隐藏目录下，可直接配全局的。例如：git config --global <a href="http://user.name">user.name</a> “zhang3”<br />
全局配置默认路径为：C/Users/Adminnistator/.gitconfig  优先用项目中的配置，如果项目中没有，则用全局的配置。</p>
<p>3.查看状态：git status<br />
–确认目录下有哪些代码待提交或没有提交，下面显示成红色没有提交。</p>
<p>4.添加文件：git add .<br />
–git add .(注意这个&quot;.“，是有空格的，”.&quot;代表当前目录下的全部文件都提交）<br />
–也可输入:git add src ,即提交了src，此src为文件夹。<br />
提交后，则会变绿。变绿代表进入了”暂存区“，并没有提交到服务器上。</p>
<p>5.提交文件：git commit<br />
–提交至服务器。将”暂存区“（绿色的内容）提交至服务器。<br />
–git commit -m “双引号中间是提交代码时写的备注”<br />
–注意：如果在提交时提示<br />
#Please enter the commit message for your changes. Lines starting<br />
#with ‘#’ will be ignored, and an empty message aborts the commit.<br />
则修改提交命令为： git commit -m “注释”</p>
<p>6.再次查看状态：git status<br />
–确认暂储区没有待提交的内容。</p>
<p>7.推送本地代码到GitHub仓库：git push -u origin master<br />
–此步的前提是已经在GitHub上创建好了Git仓库，否则得先创建仓库，再进行此步，具体操作见步骤三</p>
<p>8.（2022-03-25 更新）在GitHub上修改代码保存后，更新修改后的代码到本地，需执行命令：git pull origin</p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>GitHub</tag>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>Git安装与配置</title>
    <url>/2023/05/02/Git%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h2 id="安装"><a class="markdownIt-Anchor" href="#安装"></a> 安装</h2>
<h3 id="1下载-git"><a class="markdownIt-Anchor" href="#1下载-git"></a> 1.下载 Git</h3>
<p>根据操作系统类型下载对应版本</p>
<p><a href="https://git-scm.com/download">Git官网下载</a><br />
<img src="https://cdn.jsdelivr.net/gh/Captain997/Blogimage@main/blogimg/2023-5-2/1.png" alt="" /></p>
<h3 id="2安装"><a class="markdownIt-Anchor" href="#2安装"></a> 2.安装</h3>
<p>大部分人用Windows，固以Windows为例<br />
双击打开下载好的  Git-2.40.1-64-bit<br />
默认路径，可按需修改<br />
<img src="https://cdn.jsdelivr.net/gh/Captain997/Blogimage@main/blogimg/2023-5-2/2.png" alt="" /></p>
<h3 id="3安装选项"><a class="markdownIt-Anchor" href="#3安装选项"></a> 3.安装选项</h3>
<p>如果不明确自己的需求，建议默认即可<br />
<img src="https://cdn.jsdelivr.net/gh/Captain997/Blogimage@main/blogimg/2023-5-2/3.png" alt="" /></p>
<h3 id="4默认分支配置"><a class="markdownIt-Anchor" href="#4默认分支配置"></a> 4.默认分支配置</h3>
<p>Git默认的是master分支，但目前GitHub创建的分支默认已经改成main<br />
所以建议将Git的默认分支设置成main<br />
<img src="https://cdn.jsdelivr.net/gh/Captain997/Blogimage@main/blogimg/2023-5-2/4.png" alt="" /><br />
接下来无脑下一步即可</p>
<h3 id="5安装成功"><a class="markdownIt-Anchor" href="#5安装成功"></a> 5.安装成功</h3>
<p><img src="https://cdn.jsdelivr.net/gh/Captain997/Blogimage@main/blogimg/2023-5-2/5.png" alt="" /></p>
<h2 id="验证git是否安装成功"><a class="markdownIt-Anchor" href="#验证git是否安装成功"></a> 验证Git是否安装成功</h2>
<p>在PowerShell或CMD运行git --version查看Git版本</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git --version</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/Captain997/Blogimage@main/blogimg/2023-5-2/git%E7%89%88%E6%9C%AC.png" alt="" /></p>
<h2 id="配置git关联到远端仓库"><a class="markdownIt-Anchor" href="#配置git关联到远端仓库"></a> 配置Git关联到远端仓库</h2>
<p>这里主要介绍免费公开的代码托管平台，自建平台请以实际为准<br />
<strong>GitHub：全球最大的代码托管网站和开源社区</strong><br />
<strong>Gitee（码云）：开源中国于2013年推出的基于Git的代码托管和协作开发平台也是目前是中国大陆规模最大的代码托管平台</strong></p>
<p><strong>这里以GitHub为例，gitee也大差不差的步骤</strong></p>
<h3 id="1打开git-bash"><a class="markdownIt-Anchor" href="#1打开git-bash"></a> 1.打开Git Bash</h3>
<p><strong>右键打开Git Bash Here</strong><br />
<img src="https://cdn.jsdelivr.net/gh/Captain997/Blogimage@main/blogimg/2023-5-2/GitBash.png" alt="" /></p>
<h3 id="2设置github用户名-邮箱"><a class="markdownIt-Anchor" href="#2设置github用户名-邮箱"></a> 2.设置GitHub用户名、邮箱</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git config --global user.name &quot;你的GitHub账户名字&quot;</span><br></pre></td></tr></table></figure>
<p><strong>回车，接着输入</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git config --global user.email &quot;你的GitHub绑定邮箱&quot;</span><br></pre></td></tr></table></figure>
<p><strong>回车确认</strong></p>
<p><img src="https://cdn.jsdelivr.net/gh/Captain997/Blogimage@main/blogimg/2023-5-2/git%E4%BF%A1%E6%81%AF%E7%BB%91%E5%AE%9A2.png" alt="" /></p>
<h3 id="3生成ssh公钥"><a class="markdownIt-Anchor" href="#3生成ssh公钥"></a> 3.生成ssh公钥</h3>
<p>生成公钥</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;你的GitHub绑定邮箱&quot;</span><br></pre></td></tr></table></figure>
<p>输入后按3次回车</p>
<p><img src="https://cdn.jsdelivr.net/gh/Captain997/Blogimage@main/blogimg/2023-5-2/ssh%E5%85%AC%E9%92%A5%E5%8C%992.png" alt="" /></p>
<h3 id="4验证配置是否成功"><a class="markdownIt-Anchor" href="#4验证配置是否成功"></a> 4.验证配置是否成功</h3>
<p>依次输入下列命令，如若出现设置信息即配置成功</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git config user.name</span><br><span class="line">git config user.email</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/Captain997/Blogimage@main/blogimg/2023-5-2/%E9%85%8D%E7%BD%AE%E9%AA%8C%E8%AF%81.png" alt="" /></p>
<h3 id="5在github添加生成的公钥"><a class="markdownIt-Anchor" href="#5在github添加生成的公钥"></a> 5.在GitHub添加生成的公钥</h3>
<p>登录GitHub点击右上角的头像</p>
<p>依次点击Settings --&gt; SSH and GPG keys --&gt; New SSH key</p>
<p><img src="https://cdn.jsdelivr.net/gh/Captain997/Blogimage@main/blogimg/2023-5-2/giyhubaddsshkeys.png" alt="" /></p>
<h3 id="6添加公钥"><a class="markdownIt-Anchor" href="#6添加公钥"></a> 6.添加公钥</h3>
<p>在路径C:\Users\xxxx(用户名)\下有名为.ssh的文件夹</p>
<p>进入.ssh文件夹，用记事本打开<strong>id_rsa.pub</strong></p>
<p><img src="https://cdn.jsdelivr.net/gh/Captain997/Blogimage@main/blogimg/2023-5-2/%E6%B7%BB%E5%8A%A0%E5%85%AC%E9%92%A5.png" alt="" /></p>
<h3 id="7连接验证"><a class="markdownIt-Anchor" href="#7连接验证"></a> 7.连接验证</h3>
<p>输入</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure>
<p><strong>成功结果如下</strong></p>
<p><img src="https://cdn.jsdelivr.net/gh/Captain997/Blogimage@main/blogimg/2023-5-2/%E8%BF%9E%E6%8E%A5%E9%AA%8C%E8%AF%81.png" alt="" /></p>
<p><strong>至此已安装和配置完成～</strong></p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>Git</tag>
        <tag>教程</tag>
      </tags>
  </entry>
  <entry>
    <title>自编译OpenWrt固件</title>
    <url>/2023/04/20/%E8%87%AA%E7%BC%96%E8%AF%91OpenWrt%E5%9B%BA%E4%BB%B6/</url>
    <content><![CDATA[<p>文章封面测试文章封面测试文章封面测试文章封面测试文章封面测试文章封面测试文章封面测试文章封面测试文章封面测试文章封面测试</p>
]]></content>
  </entry>
</search>
